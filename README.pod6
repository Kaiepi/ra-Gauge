=begin pod

![Build Status](https://github.com/Kaiepi/ra-Gauge/actions/workflows/test.yml/badge.svg)

=head1 NAME

Gauge - Iterative polling

=head1 SYNOPSIS

=begin code :lang<raku>
use v6.d;
use Gauge;
# How fast can 1..100 be sunk? Take an estimate of how many iterations can be
# completed in 1 second every 20 seconds:
.say for Gauge(-> --> Nil { sink 1..100 }).poll(1).throttle(19);
=end code

=head1 DESCRIPTION

=for code :lang<raku>
class Gauge is Seq { ... }

C<Gauge> attempts to time iterations of a block as accurately as is doable from
within the realms of Raku. While this does not make for a very sophisticated
benchmark on its own by virtue of its limitations, this may provide raw input
for such a utility.

Any C<Gauge> sequence will be lazy and non-deterministic. These evaluate side
effects during a C<skip> rather than a C<sink>, allowing for a warmup period.

The C<$*GAUGE-RAW> dynamic variable toggles garbage collection before intensive
iterations in general, i.e. those of C<poll> currently. By default, this will
be C<False> on MoarVM and the JVM. If set to C<True>, iterations are very
likely to be skewed by any interruption due to GC, but with enough time and
luck, the epitomistical result should be possible to achieve, which we can only
approach otherwise.

=head1 METHODS

=head2 CALL-ME

=for code :lang<raku>
method CALL-ME(::?CLASS:_: Block:D $block --> ::?CLASS:D)

Produces a new C<Gauge> sequence of native C<int> durations of a call to the
given block. As such, the size of a duration is constrained by C<$?BITS> and is
prone to underflows. Measurements of each duration are B<not> monotonic, thus
leap seconds and hardware errors will skew results.

=head2 poll

=for code :lang<raku>
method poll(::?CLASS:D:
    Real:D $seconds,
    Gauge::Poller:_ :$poller = $*GAUGE-RAW ?? Gauge::Poller::Raw !! Gauge::Poller::Collected
--> ::?CLASS:D)

Returns a new C<Gauge> sequence that produces an C<Int:D> count of iterations
of the former totalling a duration of C<$seconds>. This will take longer than
the given argument to complete due to the overhead of iteration.

Due to the time-sensitive nature of polling, a custom C<Gauge::Poller> with
inlined setup or cleanup in C<pull-one> may be provided.

=head2 throttle

=for code :lang<raku>
method throttle(::?CLASS:D: Real:D $seconds --> ::?CLASS:D)

Returns a new C<Gauge> sequence that will sleep C<$seconds> between iterations
of the former.

=head1 AUTHOR

Ben Davies (Kaiepi)

=head1 COPYRIGHT AND LICENSE

Copyright 2021 Ben Davies

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod
